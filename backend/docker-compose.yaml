version: '3.8'

services:
  postgres:
    image: postgres:12
    restart: always
    volumes:
    - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
  graphql-engine:
    image: hasura/graphql-engine:latest.cli-migrations-v3
    ports:
    - "8080:8080"
    depends_on:
    - "postgres"
    restart: always
    external_links:
      - hasura_node_auth:node_auth
    volumes:
      - ./hasura/migrations:/hasura-migrations
      - ./hasura/metadata:/hasura-metadata
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      PG_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: QYje56evpvZJgYU9vqu8wMbRaZMRR9UH
      API_URL: http://node_auth:8000


  hasura_node_auth:
    build:
      context: node
    depends_on:
    - "graphql-engine"
    ports:
      - 8000:8000
    restart: always
    external_links:
      - graphql-engine:hasura
    environment:
      SERVER_PORT: 8000
      JWT_SECRET: Tj2srXEL67sN9CNAsga5XcU99GHA55VV
      HASURA_GRAPHQL_URL: http://hasura:8080/v1/graphql
      HASURA_ADMIN_SECRET: QYje56evpvZJgYU9vqu8wMbRaZMRR9UH
    command: npm start

volumes:
  db_data:
